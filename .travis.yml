language: python
python:
- 3.6
sudo: required
services:
- docker
env:
- CHANGE_MINIKUBE_NONE_USER=true DATABASE=postgres TEST_HIVE_IMAGE=hive_test_image
install:
- pip install -r requirements.txt
- pip install -r test-requirements.txt
- python setup.py develop
before_script:
- sudo service postgresql stop
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.7.0/bin/linux/amd64/kubectl
- chmod +x kubectl
- sudo mv kubectl /usr/local/bin/
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
- chmod +x minikube
- sudo mv minikube /usr/local/bin/
- sudo minikube start --vm-driver=none --kubernetes-version=v1.7.0 --extra-config=apiserver.Authentication.PasswordFile.BasicAuthFile=testing.csv
- minikube update-context
- kubectl config view
- ifconfig
- netstat -apn
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
  until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do
  sleep 1; done
- kubectl get pods
- docker run -v /usr/local/bin:/hostbin munnerz/ubuntu-nsenter cp /nsenter /hostbin/nsenter
- curl -Lo helm.tar.gz https://storage.googleapis.com/kubernetes-helm/helm-v2.8.1-linux-amd64.tar.gz
- tar -zxvf helm.tar.gz
- chmod +x linux-amd64/helm
- sudo mv linux-amd64/helm /usr/local/bin
- helm init
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
  until kubectl get deploy -n kube-system -o jsonpath="$JSONPATH" 2>&1 | grep -q "tiller-deploy:Available=True";
  do sleep 1; done
- sleep 20
- kubectl get pods --namespace kube-system
- helm version
- helm install https://storage.googleapis.com/tf-on-k8s-dogfood-releases/latest/tf-job-operator-chart-latest.tgz
  -n tf-job --wait --replace
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
  until kubectl get deploy -o jsonpath="$JSONPATH" 2>&1 | grep -q "tf-job-operator:Available=True";
  do sleep 1; done
- sleep 10
- kubectl get pods --all-namespaces
- export MYIP="$(ifconfig eth0 | grep "inet addr" | cut -d ':' -f 2 | cut -d ' ' -f 1)"
- echo $MYIP
- docker build -t hive_test_image .
script:
- flake8 guillotina_hive
- py.test --cov=guillotina_hive --cov-report=xml guillotina_hive -s
after_success:
- codecov
- rm -rf *.egg-info
deploy:
  skip_cleanup: true
  provider: pypi
  user: ramon.nb
  password:
    secure: UeC3KmqY6CINK1RE3e7yS1DboWyYNrXQf7GmAU1uZRQLVk26uwhc3FNFqQ5VQEhsmoQgPPj/w5bFN//PNb546Kp6c3peVwJvVxPAJWtmc1jvNMh5/5vY53OzojHRw/TFpJgRBaLN/9zlUNLp+nH7qF/1zQ9/5KH72mWGrkVHACB6oYGOIVB3SXaV0f9n5dDWaMG0y4v61mpEc4etG6QOA5be8v8R05dywSqVAvVqtg7pkmEjKIG9CkQEiCaIBWEXKCa9tv+ooyDf3TAxsK1btZO8hgrNgAWraQQztHT3DZcJv3UCV8fMGT9zl0kFN8s/n6fjCCCCwUyAFXUxzoHDwcpLxaqNP7epXRdCF3Agjj9bRWafZyk8ilFGzthFGzrV+Syzh7rXy8YtmOpgHiMObbfqIT4r+Uj1tpYSrxCKGOVb9/QcKi76sC7qoyNBWQaipbW0hK3j4jQMTgNcovIFNtDRfeUQAsz/ZUlYb9myCrlLesxyqnY5e3DSMQV/KSlai/TcCqToe0ZA5Olf5tPyyEK4YGliTVGplSMv+1hwYGFRUt55zVkTbbQLhbH/ofgdljJwin4KeomvHjmHFxscfVhK0WE9FwljwZMABrmvX4HMghA1zCHy13thUuY11cDlaCZjEoKdxN1Kg+GAdTIulLPOye/bYK7KA+AbGkCKpoE=
  on:
    tags: true
  distributions: sdist bdist_wheel
